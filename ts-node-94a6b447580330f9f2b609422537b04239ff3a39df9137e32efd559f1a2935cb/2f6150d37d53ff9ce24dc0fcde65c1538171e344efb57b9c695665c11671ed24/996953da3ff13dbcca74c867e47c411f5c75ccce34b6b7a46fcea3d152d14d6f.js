"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const functions = require("./functions/api");
const utils_1 = require("./misc/utils");
const account_1 = require("./account");
const guru_1 = require("./guru");
const newbie_1 = require("./newbie");
const user_1 = require("./user");
const body_parser_1 = require("body-parser");
const router = express_1.Router();
// Reminder: remember to use wrapTryCatch to enable express error handling on promise rejection errors!
// For expected response, see docs for the buildStore method in misc/utils
router.post('/createAccount', utils_1.wrapTryCatch(functions.createAccount));
router.post('/login', utils_1.wrapTryCatch(functions.verifyLogin));
router.get('/config', utils_1.wrapTryCatch(functions.getConfig));
router.post('/checkEmail', utils_1.wrapTryCatch(functions.checkEmail));
router.post('/db', body_parser_1.urlencoded({ extended: true }), functions._db);
// If JWT token is  verifying session token will give UNAUTHORIZED and return {reason: 'Invalid session'}
router.use('/account', account_1.default);
router.use('/guru', guru_1.default);
router.use('/newbie', newbie_1.default);
router.use('/user', user_1.default);
exports.default = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL21udC9jL1VzZXJzL0plZmYvUGVlci1HZW5pdXMvc2VydmVyL3JvdXRlci9hcGkudHMiLCJzb3VyY2VzIjpbIi9tbnQvYy9Vc2Vycy9KZWZmL1BlZXItR2VuaXVzL3NlcnZlci9yb3V0ZXIvYXBpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEscUNBQWlDO0FBRWpDLDZDQUE2QztBQUM3Qyx3Q0FBNEM7QUFDNUMsdUNBQXNDO0FBQ3RDLGlDQUFnQztBQUNoQyxxQ0FBb0M7QUFDcEMsaUNBQWdDO0FBQ2hDLDZDQUF5QztBQUV6QyxNQUFNLE1BQU0sR0FBRyxnQkFBTSxFQUFFLENBQUM7QUFDeEIsdUdBQXVHO0FBRXZHLDBFQUEwRTtBQUMxRSxNQUFNLENBQUMsSUFBSSxDQUFDLGdCQUFnQixFQUFFLG9CQUFZLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7QUFDckUsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsb0JBQVksQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztBQUMzRCxNQUFNLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxvQkFBWSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO0FBQ3pELE1BQU0sQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFLG9CQUFZLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7QUFFL0QsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsd0JBQVUsQ0FBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUVsRSx5R0FBeUc7QUFDekcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxVQUFVLEVBQUUsaUJBQWEsQ0FBQyxDQUFDO0FBQ3RDLE1BQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLGNBQVUsQ0FBQyxDQUFDO0FBQ2hDLE1BQU0sQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLGdCQUFZLENBQUMsQ0FBQztBQUNwQyxNQUFNLENBQUMsR0FBRyxDQUFDLE9BQU8sRUFBRSxjQUFVLENBQUMsQ0FBQztBQUVoQyxrQkFBZSxNQUFNLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdleHByZXNzJztcblxuaW1wb3J0ICogYXMgZnVuY3Rpb25zIGZyb20gJy4vZnVuY3Rpb25zL2FwaSc7XG5pbXBvcnQgeyB3cmFwVHJ5Q2F0Y2ggfSBmcm9tICcuL21pc2MvdXRpbHMnO1xuaW1wb3J0IGFjY291bnRSb3V0ZXIgZnJvbSAnLi9hY2NvdW50JztcbmltcG9ydCBndXJ1Um91dGVyIGZyb20gJy4vZ3VydSc7XG5pbXBvcnQgbmV3YmllUm91dGVyIGZyb20gJy4vbmV3YmllJztcbmltcG9ydCB1c2VyUm91dGVyIGZyb20gJy4vdXNlcic7XG5pbXBvcnQgeyB1cmxlbmNvZGVkIH0gZnJvbSAnYm9keS1wYXJzZXInO1xuXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcbi8vIFJlbWluZGVyOiByZW1lbWJlciB0byB1c2Ugd3JhcFRyeUNhdGNoIHRvIGVuYWJsZSBleHByZXNzIGVycm9yIGhhbmRsaW5nIG9uIHByb21pc2UgcmVqZWN0aW9uIGVycm9ycyFcblxuLy8gRm9yIGV4cGVjdGVkIHJlc3BvbnNlLCBzZWUgZG9jcyBmb3IgdGhlIGJ1aWxkU3RvcmUgbWV0aG9kIGluIG1pc2MvdXRpbHNcbnJvdXRlci5wb3N0KCcvY3JlYXRlQWNjb3VudCcsIHdyYXBUcnlDYXRjaChmdW5jdGlvbnMuY3JlYXRlQWNjb3VudCkpO1xucm91dGVyLnBvc3QoJy9sb2dpbicsIHdyYXBUcnlDYXRjaChmdW5jdGlvbnMudmVyaWZ5TG9naW4pKTtcbnJvdXRlci5nZXQoJy9jb25maWcnLCB3cmFwVHJ5Q2F0Y2goZnVuY3Rpb25zLmdldENvbmZpZykpO1xucm91dGVyLnBvc3QoJy9jaGVja0VtYWlsJywgd3JhcFRyeUNhdGNoKGZ1bmN0aW9ucy5jaGVja0VtYWlsKSk7XG5cbnJvdXRlci5wb3N0KCcvZGInLCB1cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSksIGZ1bmN0aW9ucy5fZGIpO1xuXG4vLyBJZiBKV1QgdG9rZW4gaXMgIHZlcmlmeWluZyBzZXNzaW9uIHRva2VuIHdpbGwgZ2l2ZSBVTkFVVEhPUklaRUQgYW5kIHJldHVybiB7cmVhc29uOiAnSW52YWxpZCBzZXNzaW9uJ31cbnJvdXRlci51c2UoJy9hY2NvdW50JywgYWNjb3VudFJvdXRlcik7XG5yb3V0ZXIudXNlKCcvZ3VydScsIGd1cnVSb3V0ZXIpO1xucm91dGVyLnVzZSgnL25ld2JpZScsIG5ld2JpZVJvdXRlcik7XG5yb3V0ZXIudXNlKCcvdXNlcicsIHVzZXJSb3V0ZXIpO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=