"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Sequelize = require("sequelize");
const reference_1 = require("../reference");
const user_1 = require("./user");
const errors_1 = require("../errors");
const attributes = {
    id: {
        type: Sequelize.UUID,
        defaultValue: Sequelize.UUIDV4,
        primaryKey: true
    },
    newbie: {
        type: Sequelize.UUID,
        allowNull: false,
        references: {
            model: user_1.default,
            key: 'id',
            onUpdate: 'cascade',
            onDelete: 'cascade'
        }
    },
    guru: {
        type: Sequelize.UUID,
        allowNull: true,
        defaultValue: null,
        references: {
            model: user_1.default,
            key: 'id',
            onUpdate: 'cascade',
            onDelete: 'cascade'
        }
    },
    scheduledStart: {
        type: Sequelize.DATE,
        allowNull: false
    },
    scheduledEnd: {
        type: Sequelize.DATE,
        allowNull: false
    },
    startTime: {
        type: Sequelize.DATE,
        allowNull: true,
        defaultValue: null
    },
    endTime: {
        type: Sequelize.DATE,
        allowNull: true,
        defaultValue: null
    },
    rating: {
        type: Sequelize.INTEGER,
        allowNull: true,
        defaultValue: null
    },
    comment: {
        type: Sequelize.STRING,
        allowNull: true,
        defaultValue: null
    },
    course: {
        type: Sequelize.STRING,
        allowNull: false
    },
    assignment: {
        type: Sequelize.STRING,
        allowNull: false
    }
};
const blockUserEdit = (instance) => {
    if (instance.changed('guru')) {
        throw new errors_1.ProhibitedEditError('Editing the guru FK of sessions table is prohibited.');
    }
    if (instance.changed('newbie')) {
        throw new errors_1.ProhibitedEditError('Editing the newbie FK of sessions table is prohibited.');
    }
};
const model = reference_1.sequelizeAdmin.define('sessions', attributes);
model.beforeUpdate(blockUserEdit);
user_1.default.hasMany(model, {
    as: 'guruSession',
    foreignKey: 'user'
});
user_1.default.hasMany(model, {
    as: 'newbieSession',
    foreignKey: 'user'
});
model.sync();
exports.default = model;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL21udC9jL1VzZXJzL0plZmYvUGVlci1HZW5pdXMvc2VydmVyL2RhdGFiYXNlL21vZGVscy9zZXNzaW9uLnRzIiwic291cmNlcyI6WyIvbW50L2MvVXNlcnMvSmVmZi9QZWVyLUdlbml1cy9zZXJ2ZXIvZGF0YWJhc2UvbW9kZWxzL3Nlc3Npb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBdUM7QUFFdkMsNENBQXVEO0FBQ3ZELGlDQUEwQjtBQUMxQixzQ0FBZ0Q7QUErQmhELE1BQU0sVUFBVSxHQUFHO0lBQ2xCLEVBQUUsRUFBRTtRQUNILElBQUksRUFBRSxTQUFTLENBQUMsSUFBSTtRQUNwQixZQUFZLEVBQUUsU0FBUyxDQUFDLE1BQU07UUFDOUIsVUFBVSxFQUFFLElBQUk7S0FDaEI7SUFDRCxNQUFNLEVBQUU7UUFDUCxJQUFJLEVBQUUsU0FBUyxDQUFDLElBQUk7UUFDcEIsU0FBUyxFQUFFLEtBQUs7UUFDaEIsVUFBVSxFQUFFO1lBQ1gsS0FBSyxFQUFFLGNBQUk7WUFDWCxHQUFHLEVBQUUsSUFBSTtZQUNULFFBQVEsRUFBRSxTQUFTO1lBQ25CLFFBQVEsRUFBRSxTQUFTO1NBQ25CO0tBQ0Q7SUFDRCxJQUFJLEVBQUU7UUFDTCxJQUFJLEVBQUUsU0FBUyxDQUFDLElBQUk7UUFDcEIsU0FBUyxFQUFFLElBQUk7UUFDZixZQUFZLEVBQUUsSUFBSTtRQUNsQixVQUFVLEVBQUU7WUFDWCxLQUFLLEVBQUUsY0FBSTtZQUNYLEdBQUcsRUFBRSxJQUFJO1lBQ1QsUUFBUSxFQUFFLFNBQVM7WUFDbkIsUUFBUSxFQUFFLFNBQVM7U0FDbkI7S0FDRDtJQUNELGNBQWMsRUFBRTtRQUNmLElBQUksRUFBRSxTQUFTLENBQUMsSUFBSTtRQUNwQixTQUFTLEVBQUUsS0FBSztLQUNoQjtJQUNELFlBQVksRUFBRTtRQUNiLElBQUksRUFBRSxTQUFTLENBQUMsSUFBSTtRQUNwQixTQUFTLEVBQUUsS0FBSztLQUNoQjtJQUNELFNBQVMsRUFBRTtRQUNWLElBQUksRUFBRSxTQUFTLENBQUMsSUFBSTtRQUNwQixTQUFTLEVBQUUsSUFBSTtRQUNmLFlBQVksRUFBRSxJQUFJO0tBQ2xCO0lBQ0QsT0FBTyxFQUFFO1FBQ1IsSUFBSSxFQUFFLFNBQVMsQ0FBQyxJQUFJO1FBQ3BCLFNBQVMsRUFBRSxJQUFJO1FBQ2YsWUFBWSxFQUFFLElBQUk7S0FDbEI7SUFDRCxNQUFNLEVBQUU7UUFDUCxJQUFJLEVBQUUsU0FBUyxDQUFDLE9BQU87UUFDdkIsU0FBUyxFQUFFLElBQUk7UUFDZixZQUFZLEVBQUUsSUFBSTtLQUNsQjtJQUNELE9BQU8sRUFBRTtRQUNSLElBQUksRUFBRSxTQUFTLENBQUMsTUFBTTtRQUN0QixTQUFTLEVBQUUsSUFBSTtRQUNmLFlBQVksRUFBRSxJQUFJO0tBQ2xCO0lBQ0QsTUFBTSxFQUFFO1FBQ1AsSUFBSSxFQUFFLFNBQVMsQ0FBQyxNQUFNO1FBQ3RCLFNBQVMsRUFBRSxLQUFLO0tBQ2hCO0lBQ0QsVUFBVSxFQUFFO1FBQ1gsSUFBSSxFQUFFLFNBQVMsQ0FBQyxNQUFNO1FBQ3RCLFNBQVMsRUFBRSxLQUFLO0tBQ2hCO0NBQ0QsQ0FBQztBQUVGLE1BQU0sYUFBYSxHQUFHLENBQUMsUUFBeUI7SUFDL0MsRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDOUIsTUFBTSxJQUFJLDRCQUFtQixDQUFDLHNEQUFzRCxDQUFDLENBQUM7SUFDdkYsQ0FBQztJQUNELEVBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2hDLE1BQU0sSUFBSSw0QkFBbUIsQ0FBQyx3REFBd0QsQ0FBQyxDQUFDO0lBQ3pGLENBQUM7QUFDRixDQUFDLENBQUM7QUFFRixNQUFNLEtBQUssR0FBd0QsMEJBQUssQ0FBQyxNQUFNLENBQXFDLFVBQVUsRUFBRSxVQUFVLENBQUMsQ0FBQztBQUM1SSxLQUFLLENBQUMsWUFBWSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0FBRWxDLGNBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFO0lBQ25CLEVBQUUsRUFBRSxhQUFhO0lBQ2pCLFVBQVUsRUFBRSxNQUFNO0NBQ2xCLENBQUMsQ0FBQztBQUNILGNBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFO0lBQ25CLEVBQUUsRUFBRSxlQUFlO0lBQ25CLFVBQVUsRUFBRSxNQUFNO0NBQ2xCLENBQUMsQ0FBQztBQUVILEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUNiLGtCQUFlLEtBQUssQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFNlcXVlbGl6ZSBmcm9tICdzZXF1ZWxpemUnO1xuXG5pbXBvcnQgeyBzZXF1ZWxpemVBZG1pbiBhcyBhZG1pbiB9IGZyb20gJy4uL3JlZmVyZW5jZSc7XG5pbXBvcnQgdXNlciBmcm9tICcuL3VzZXInO1xuaW1wb3J0IHsgUHJvaGliaXRlZEVkaXRFcnJvciB9IGZyb20gJy4uL2Vycm9ycyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2Vzc2lvbkF0dHJpYnV0ZXMge1xuXHRpZD86IHN0cmluZztcblx0bmV3YmllPzogc3RyaW5nO1xuXHRndXJ1Pzogc3RyaW5nO1xuXHRzdWJqZWN0Pzogc3RyaW5nO1xuXHRzY2hlZHVsZWRTdGFydD86IERhdGU7XG5cdHNjaGVkdWxlZEVuZD86IERhdGU7XG5cdHN0YXJ0VGltZT86IERhdGU7XG5cdGVuZFRpbWU/OiBEYXRlO1xuXHRyYXRpbmc/OiBudW1iZXI7XG5cdGNvbW1lbnQ/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2Vzc2lvbkluc3RhbmNlIGV4dGVuZHMgU2VxdWVsaXplLkluc3RhbmNlPFNlc3Npb25BdHRyaWJ1dGVzPiB7XG5cdGNyZWF0ZWRBdDogRGF0ZTtcblx0dXBkYXRlZEF0OiBEYXRlO1xuXHRcblx0aWQ6IHN0cmluZztcblx0bmV3YmllOiBzdHJpbmc7XG5cdGd1cnU/OiBzdHJpbmc7XG5cdHN1YmplY3Q6IHN0cmluZztcblx0c2NoZWR1bGVkU3RhcnQ6IERhdGU7XG5cdHNjaGVkdWxlZEVuZDogRGF0ZTtcblx0c3RhcnRUaW1lPzogRGF0ZTtcblx0ZW5kVGltZT86IERhdGU7XG5cdHJhdGluZz86IG51bWJlcjtcblx0Y29tbWVudD86IHN0cmluZztcbn1cblxuY29uc3QgYXR0cmlidXRlcyA9IHtcblx0aWQ6IHtcblx0XHR0eXBlOiBTZXF1ZWxpemUuVVVJRCxcblx0XHRkZWZhdWx0VmFsdWU6IFNlcXVlbGl6ZS5VVUlEVjQsXG5cdFx0cHJpbWFyeUtleTogdHJ1ZVxuXHR9LFxuXHRuZXdiaWU6IHtcblx0XHR0eXBlOiBTZXF1ZWxpemUuVVVJRCxcblx0XHRhbGxvd051bGw6IGZhbHNlLFxuXHRcdHJlZmVyZW5jZXM6IHtcblx0XHRcdG1vZGVsOiB1c2VyLFxuXHRcdFx0a2V5OiAnaWQnLFxuXHRcdFx0b25VcGRhdGU6ICdjYXNjYWRlJyxcblx0XHRcdG9uRGVsZXRlOiAnY2FzY2FkZSdcblx0XHR9XG5cdH0sXG5cdGd1cnU6IHtcblx0XHR0eXBlOiBTZXF1ZWxpemUuVVVJRCxcblx0XHRhbGxvd051bGw6IHRydWUsXG5cdFx0ZGVmYXVsdFZhbHVlOiBudWxsLFxuXHRcdHJlZmVyZW5jZXM6IHtcblx0XHRcdG1vZGVsOiB1c2VyLFxuXHRcdFx0a2V5OiAnaWQnLFxuXHRcdFx0b25VcGRhdGU6ICdjYXNjYWRlJyxcblx0XHRcdG9uRGVsZXRlOiAnY2FzY2FkZSdcblx0XHR9XG5cdH0sXG5cdHNjaGVkdWxlZFN0YXJ0OiB7XG5cdFx0dHlwZTogU2VxdWVsaXplLkRBVEUsXG5cdFx0YWxsb3dOdWxsOiBmYWxzZVxuXHR9LFxuXHRzY2hlZHVsZWRFbmQ6IHtcblx0XHR0eXBlOiBTZXF1ZWxpemUuREFURSxcblx0XHRhbGxvd051bGw6IGZhbHNlXG5cdH0sXG5cdHN0YXJ0VGltZToge1xuXHRcdHR5cGU6IFNlcXVlbGl6ZS5EQVRFLFxuXHRcdGFsbG93TnVsbDogdHJ1ZSxcblx0XHRkZWZhdWx0VmFsdWU6IG51bGxcblx0fSxcblx0ZW5kVGltZToge1xuXHRcdHR5cGU6IFNlcXVlbGl6ZS5EQVRFLFxuXHRcdGFsbG93TnVsbDogdHJ1ZSxcblx0XHRkZWZhdWx0VmFsdWU6IG51bGxcblx0fSxcblx0cmF0aW5nOiB7XG5cdFx0dHlwZTogU2VxdWVsaXplLklOVEVHRVIsXG5cdFx0YWxsb3dOdWxsOiB0cnVlLFxuXHRcdGRlZmF1bHRWYWx1ZTogbnVsbFxuXHR9LFxuXHRjb21tZW50OiB7XG5cdFx0dHlwZTogU2VxdWVsaXplLlNUUklORyxcblx0XHRhbGxvd051bGw6IHRydWUsXG5cdFx0ZGVmYXVsdFZhbHVlOiBudWxsXG5cdH0sXG5cdGNvdXJzZToge1xuXHRcdHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkcsXG5cdFx0YWxsb3dOdWxsOiBmYWxzZVxuXHR9LFxuXHRhc3NpZ25tZW50OiB7XG5cdFx0dHlwZTogU2VxdWVsaXplLlNUUklORyxcblx0XHRhbGxvd051bGw6IGZhbHNlXG5cdH1cbn07XG5cbmNvbnN0IGJsb2NrVXNlckVkaXQgPSAoaW5zdGFuY2U6IFNlc3Npb25JbnN0YW5jZSkgPT4ge1xuXHRpZiAoaW5zdGFuY2UuY2hhbmdlZCgnZ3VydScpKSB7XG5cdFx0dGhyb3cgbmV3IFByb2hpYml0ZWRFZGl0RXJyb3IoJ0VkaXRpbmcgdGhlIGd1cnUgRksgb2Ygc2Vzc2lvbnMgdGFibGUgaXMgcHJvaGliaXRlZC4nKTtcblx0fVxuXHRpZiAoaW5zdGFuY2UuY2hhbmdlZCgnbmV3YmllJykpIHtcblx0XHR0aHJvdyBuZXcgUHJvaGliaXRlZEVkaXRFcnJvcignRWRpdGluZyB0aGUgbmV3YmllIEZLIG9mIHNlc3Npb25zIHRhYmxlIGlzIHByb2hpYml0ZWQuJyk7XG5cdH1cbn07XG5cbmNvbnN0IG1vZGVsOiBTZXF1ZWxpemUuTW9kZWw8U2Vzc2lvbkluc3RhbmNlLCBTZXNzaW9uQXR0cmlidXRlcz4gPSBhZG1pbi5kZWZpbmU8U2Vzc2lvbkluc3RhbmNlLCBTZXNzaW9uQXR0cmlidXRlcz4oJ3Nlc3Npb25zJywgYXR0cmlidXRlcyk7XG5tb2RlbC5iZWZvcmVVcGRhdGUoYmxvY2tVc2VyRWRpdCk7XG5cbnVzZXIuaGFzTWFueShtb2RlbCwge1xuXHRhczogJ2d1cnVTZXNzaW9uJyxcblx0Zm9yZWlnbktleTogJ3VzZXInXG59KTtcbnVzZXIuaGFzTWFueShtb2RlbCwge1xuXHRhczogJ25ld2JpZVNlc3Npb24nLFxuXHRmb3JlaWduS2V5OiAndXNlcidcbn0pO1xuXG5tb2RlbC5zeW5jKCk7XG5leHBvcnQgZGVmYXVsdCBtb2RlbDtcbiJdfQ==