FORMAT: 1A
HOST: http://peergenius.io/

# Peer Genius

Peer Genius is an online application that facilitates the search for peer tutors.

## Server API [/api]

All API related requests pass under the `/api` route.

### Create Account [POST /api/createAccount]

Attempts to create an account using information given

+ Request (application/json)

    + Attributes
        + email
        + password
        + firstName
        + lastName
        + birthday
            + year (number)
            + month (number)
            + day (number)
        
+ Response 200 (application/json)

    + Attributes (Store)
    
        Account creation successful

+ Response 409

        The email is already associated with an account
        
### Log In [POST /api/login]

Logs in the user using email and password given

+ Request (application/json)

    + Attributes
        + email
        + password

+ Response 200 (application/json)

    + Attributes (Store)
    
        Login successful
        
+ Response 400

        Email not found

+ Response 401

        Incorrect password
        
## Account API [/api/account]

All requests under this route will be subject to JWT inspection. If JWT is invalid, the response status will be 401 (UNAUTHORIZED). Response body will be

{
    "reason": "Invalid session"
}

### Edit Account [POST /api/account/edit]

Edits account email and password

+ Request

    + Attributes
        + password - User's current password
        + newEmail - [optional] The new email user wishes to use
        + newPassword - [optional] The new password user wishes to use
        
+ Response 200

        Edit successful
        
+ Response 401

        Incorrect password

### Verify [POST /api/account/verify]

Verifies the validity of client's current JWT

+ Response 200

### Info [POST /api/account/info]

Retrieves information about the account

+ Response 200

    + Attributes (Store)
    
### Refresh JWT [POST /api/account/refresh]

Gives user a new JWT to extend  current session

+ Response 200

    + Attributes
        + sessionJWT (string) - a JSON Web Token to authenticate the user for future transactions
        
# Data Structures

## Store (object) - Information to help the client initialize its redux store

+ account (object)
    + email (string)
    + verified (string) - whether the user's email has been verified
+ user (object)
    + firstName (string)
    + lastName (string)
    + birthday (object)
+ sessionJWT (string) - a JSON Web Token to authenticate the user for future transactions

## InvalidSession (object) - Response when JWT is invalid

+ reason (string) - Invalid session